#!/bin/bash 

# remove old default
rm -f /etc/nginx/sites-enabled/default

# maybe build backends
MAP_BACKENDS=$(for backend in ${BACKENDS}
do
	echo -e "\tpagespeed Domain ${backend};"
	echo -e "\tpagespeed MapRewriteDomain ${FRONTEND} ${backend};"
done)

# maybe build proxy domains
MAP_PROXY_DOMAINS=$(for domain in ${PROXY_DOMAINS}
do
	echo -e "\tpagespeed Domain ${domain};"
	echo -e "\tpagespeed MapOriginDomain 127.0.0.1/proxy/${domain} ${domain};"
	echo -e "\tpagespeed MapRewriteDomain ${FRONTEND}/proxy/${domain} ${domain};"
done)

# maybe configure memcache 
MEMCACHED_SERVERS=$(if [[ -n "${MEMCACHED}" ]]
then 
	echo -e "pagespeed MemcachedServers \"${MEMCACHED}\";"
fi)

# replace env variables in template
echo "$(eval "echo -e \"$(sed 's/\"/\\\"/g' /etc/nginx/sites-enabled/template)\"")" >  /etc/nginx/sites-enabled/default.conf
cat /etc/nginx/sites-enabled/default.conf

# create cache dir
/bin/mkdir -p /var/ngx_pagespeed_cache
/bin/chmod a+wrx /var/ngx_pagespeed_cache

# replace env variables in template
echo "$(eval "echo \"$(sed 's/\"/\\\"/g' /etc/varnish//template)\"")" >  /etc/varnish/default.vcl
cat /etc/varnish/default.vcl

# start varnish
varnishd -f /etc/varnish/default.vcl -s malloc,${VARNISH_CACHE:-1000M} -a 0.0.0.0:${VARNISH_PORT:-80}


# start nginx
/usr/sbin/nginx $@